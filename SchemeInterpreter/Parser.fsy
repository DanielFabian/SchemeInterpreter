%{
open Ast
%}

%start start

%token <string> ID
%token <string> STRING
%token <int> INT
%token <float> FLOAT
%token <bool> BOOL
%token LPAREN RPAREN DOT QUOTE
%token EOF

%type <Ast.LispProgram> start

%%

start: Prog                                 { $1 }

Prog: ValueList                             { Prog (List.rev $1) }

Value:                                      
    | ID                                    { Atom $1 }
    | INT                                   { Number $1 }
    | FLOAT                                 { Float $1 }
    | STRING                                { String $1 }
    | BOOL                                  { Bool $1 }
    | LPAREN ValueList RPAREN               { List (List.rev $2) }
    | LPAREN ValueList DOT Value RPAREN     { DottedList (List.rev $2, $4) }
    | QUOTE Value                           { List ( [Atom "quote"; $2] ) }
ValueList:
    |                                       { [] }
    | ValueList Value                       { $2 :: $1 }